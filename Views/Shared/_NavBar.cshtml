@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> signInManager
@inject UserManager<User> userManager


<nav id="my-nav" class="navbar">
    <div class="logo">
        <a href="@Url.Action("Index", "Home")">
            <img id="logo" src="~/assets/logo.svg" alt="CodingBuddy C-shaped logo in blue and purple" />
        </a>
    </div>
    <div id="logo-text" class="logo-text"><a>@Html.ActionLink("CODINGBUDDY", "Index", "Home")</a></div>
    <ul id="navbar-list" class="nav-list">
        <li class="list-item">
            <a>@Html.ActionLink("Home", "Index", "Home")</a>
        </li>
        <li class="list-item">
            <a>@Html.ActionLink("About", "About", "Home")</a>
        </li>
        <li class="list-item">
            <a>@Html.ActionLink("FAQ", "FAQ", "Home")</a>
        </li>
        @if (signInManager.IsSignedIn(User))
        {

            @* Checks for notification *@
            string username = User.Identity.Name;
            bool notification = false;
            User user = userManager.Users.ToList().Where(u => u.UserName == username).FirstOrDefault<User>();
            notification = user.HasNotification;
            

            <li class="list-item">
                <a>@Html.ActionLink("Find-a-Buddy!", "FindABuddy", "Matches")</a>
            </li>
            @if (notification)
            {
                <li class="list-item highlighted">
                    <i style="color: red;" class="fas fa-bell"></i>
                    <a>@Html.ActionLink("My Matches", "Matches", "Matches")</a>
                </li>
            }
            else
            {
                <li class="list-item">
                    <a>@Html.ActionLink("My Matches", "Matches", "Matches")</a>
                </li>
            }
            
        }
    </ul>
    <ul id="login-list" class="login-signup-list">
        @if (signInManager.IsSignedIn(User))
        {   
            // Get the current user
            string username = User.Identity.Name;
            User user = userManager.Users.ToList().Where(u => u.UserName == username).FirstOrDefault<User>();
            @*Displays the username if the user is logged in*@
                @* Tell current user to fill in profile if no hobbies selected*@
                @if(user.HobbyUsers.Count() == 0)
            {
                    <li class="list-item" id="profile-incomplete-warning">
                        <i style="color: red;" class="fas fa-exclamation-circle"></i>
                        @*Links to the edit user page when click on username*@
                        <a asp-action="EditProfile" asp-controller="Account"
                            asp-area="" style="color:red!important; text-decoration: underline;">@User.Identity!.Name</a>
                    </li>
                    <div class="hidden" id="profile-completion-container">
                        <div id="profile-completion-message">
                            You have not selected any hobbies. Please click on this link to edit your profile and add more hobbies
                            on the "hobbies" tab to get better matches!
                        </div>
                    </div>
                }
                else
                {
                    <li class="list-item">
                        @*Links to the edit user page when click on username*@
                        <a asp-action="EditProfile" asp-controller="Account"
                        asp-area="" style="color:blueviolet!important; text-decoration: underline;">@User.Identity!.Name</a>
                    </li>
                }
            <li class="list-item">
                <form method="post" asp-action="LogOut" asp-controller="Account"
                  asp-area="">
                    <input type="submit" value="Log Out"
                           class="btn" id="logout-button">
                </form>
            </li>

        }
        else
        {
            // get current action

            var action = ViewContext.RouteData.Values["action"];
            action = action!.ToString();

            // anonymous user - Register link and Log In button
            <li class="list-item @Html.ActiveClass("Account", "Register",
            "selected")">
                <a asp-action="RegisterInSteps" asp-controller="Account"
               asp-area="" class="nav-link list-item" id="signup-button">Sign Up</a>
            </li>
            <li class="list-item">
                <a asp-action="Login" asp-controller="Account"
               asp-area="" class="nav-link list-item" id="login-button">Log In</a>
            </li>
        }
    </ul>
    <div id="toggle-button" class="menu">
        <div class="menu-line"></div>
        <div class="menu-line"></div>
        <div class="menu-line"></div>
    </div>
</nav>