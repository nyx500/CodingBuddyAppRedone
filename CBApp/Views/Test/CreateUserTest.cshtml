@model CreateUserViewModel

@{
    ViewData["Title"] = "Create User";
}

<h1 style="color: black; margin: 20px">Create User</h1>
@*
<form asp-action="CreateUserTest" method="post">
    <div class="form-group-row">
        <div class="col-sm-2">
            <label style="color: black">
                SlackId:
            </label>
        </div>
        <div class="col-sm-4">
            <input asp-for = "user.SlackId" class="form-control" />
            <div class="col">
                <span asp-validation-for="user.SlackId"
                class="text-danger"></span>
            </div>
        </div>
    </div>
    <div class="form-group-row">
        <div class="col-sm-2">
            <label style="color: black">
                Username:
            </label>
        </div>
        <div class="col-sm-4">
            <input asp-for="user.UserName" class="form-control" />
            <div class="col">
                <span asp-validation-for="user.UserName"
                      class="text-danger"></span>
            </div>
        </div>
    </div>
    <div class="form-group-row">
        <div class="col-sm-2">
            <label style="color: black">
                Bio:
            </label>
        </div>
        <div class="col-sm-4">
            <input asp-for="user.Bio" class="form-control" />
            <div class="col">
                <span asp-validation-for="user.Bio"
                      class="text-danger"></span>
            </div>
        </div>
    </div>
    <button type="submit" class="btn btn-primary" style="color: white; background-color: black; margin: 20px;">Create</button>
</form>
*@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal" style="padding: 20px; margin: 50px; background: darkblue; border: 2px solid black; border-radius: 12px">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group" style="margin: 20px;">
            @Html.LabelFor(model => model.user.SlackId, htmlAttributes: new { Style = "color: white;", @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.user.SlackId, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.user.SlackId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" style="margin: 20px;">
            @Html.LabelFor(model => model.user.UserName, htmlAttributes: new { Style = "color: white;", @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.user.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.user.UserName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" style="margin-left: 20px;">
            @Html.LabelFor(model => model.SelectedCareerPhaseId, htmlAttributes: new { Style = "color: white;", @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedCareerPhaseId, new SelectList(Model.careerPhaseSelectList, "Value", "Text"),
            "Select Career Phase",  new { @class = "form-control"});
                @Html.ValidationMessageFor(model => model.SelectedCareerPhaseId, "", new { @class = "text-danger" })
            </div>  
        </div>
        <div class="form-group" style="margin-left: 20px;">
            @Html.LabelFor(model => model.SelectedExperienceLevelId, htmlAttributes: new {Style = "color: white;", @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedExperienceLevelId, new SelectList(Model.experienceLevelSelectList, "Value", "Text"),
            "Select Experience Level",  new { @class = "form-control"});
                @Html.ValidationMessageFor(model => model.SelectedExperienceLevelId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" style="margin-left: 20px;">
            @Html.LabelFor(model => model.SelectedGenderId, htmlAttributes: new {Style = "color: white;", @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedGenderId, new SelectList(Model.genderSelectList, "Value", "Text"),
            "Select Gender (Optional)",  new { @class = "form-control"});
                @Html.ValidationMessageFor(model => model.SelectedGenderId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" style="margin-left: 20px">
            @Html.LabelFor(model => model.NaturalLanguagesViewModelList, htmlAttributes: new {Style = "color: white;", @class = "control-label col-md-2" })
            <div class="col-md-10">
                <ul style="list-style-type: none;">
                    @for (var i = 0; i < Model.NaturalLanguagesViewModelList!.Count(); i++)
                    {
                        <li style="display: inline; color: white;">
                            @Html.HiddenFor(model => model.NaturalLanguagesViewModelList![i].naturalLanguage!)
                            @Html.CheckBoxFor(model => model.NaturalLanguagesViewModelList![i].isSelected, new { Style = "vertical-align:3px;" })
                            @Html.Label(Model.NaturalLanguagesViewModelList![i].naturalLanguage!.Name)
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div class="form-group" style="margin-left: 20px">
            @Html.LabelFor(model => model.ProgrammingLanguagesViewModelList, htmlAttributes: new {Style = "color: white;", @class = "control-label col-md-2" })
            <div class="col-md-10">
                <ul style="list-style-type: none;">
                    @for (var i = 0; i < Model.ProgrammingLanguagesViewModelList!.Count(); i++)
                    {
                        <li style="display: inline; color: white;">
                            @Html.HiddenFor(model => model.ProgrammingLanguagesViewModelList![i].programmingLanguage!)
                            @Html.CheckBoxFor(model => model.ProgrammingLanguagesViewModelList![i].isSelected, new { Style = "vertical-align:3px;" })
                            @Html.Label(Model.ProgrammingLanguagesViewModelList![i].programmingLanguage!.Name)
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div class="form-group" style="margin-left: 20px">
            @Html.LabelFor(model => model.CSInterestsViewModelList, htmlAttributes: new {Style = "color: white;", @class = "control-label col-md-2" })
            <div class="col-md-10">
                <ul style="list-style-type: none;">
                    @for (var i = 0; i < Model.CSInterestsViewModelList!.Count(); i++)
                    {
                        <li style="display: inline; color: white;">
                            @Html.HiddenFor(model => model.CSInterestsViewModelList![i].CSInterest!)
                            @Html.CheckBoxFor(model => model.CSInterestsViewModelList![i].isSelected, new { Style = "vertical-align:3px;" })
                            @Html.Label(Model.CSInterestsViewModelList![i].CSInterest!.Name)
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div class="form-group" style="margin-left: 20px">
            @Html.LabelFor(model => model.HobbiesViewModelList, htmlAttributes: new {Style = "color: white;", @class = "control-label col-md-2" })
            <div class="col-md-10">
                <ul style="list-style-type: none;">
                    @for (var i = 0; i < Model.HobbiesViewModelList!.Count(); i++)
                    {
                        <li style="display: inline; color: white;">
                            @Html.HiddenFor(model => model.HobbiesViewModelList![i].Hobby!)
                            @Html.CheckBoxFor(model => model.HobbiesViewModelList![i].isSelected, new { Style = "vertical-align:3px;" })
                            @Html.Label(Model.HobbiesViewModelList![i].Hobby!.Name)
                        </li>
                    }
                </ul>
            </div>
        </div>
        <br />
        <div class="form-group" style="margin-left: 20px;">
            <div class="col-md-offset-2 col-md-10">
                <input style="background-color: black; color: white; margin: 20px 0px;" type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}